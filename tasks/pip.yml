---

- name: Define pip clients for virtualenv
  ansible.builtin.set_fact:
    pip_clients: "{{ _virtualenv_path + '/bin/' + pip_executable }}"
  when: _virtualenv_path is defined

- name: Get pip version
  ansible.builtin.shell: |
    set -o pipefail
    pip show pip | awk '/^Version:/ {print $2}'
  args:
    executable: /bin/bash
  changed_when: false
  check_mode: false
  register: pip_version

- name: Upgrade pip (site-packages) to latest version when version is below 19  # noqa package-latest
  ansible.builtin.pip:
    name: pip
    state: latest
    extra_args: --upgrade
  environment:
    HTTP_PROXY: "{{ python_http_proxy | default('') }}"
    HTTPS_PROXY: "{{ python_https_proxy | default('') }}"
  when:
    - _virtualenv_path is not defined
    - pip_version.stdout is version('19.0.0', '<')

- name: Upgrade pip (virtualenv) to latest version  # noqa package-latest
  ansible.builtin.pip:
    name: pip
    state: latest
    virtualenv: "{{ _virtualenv_path }}"
    extra_args: --upgrade
  environment:
    HTTP_PROXY: "{{ python_http_proxy | default('') }}"
    HTTPS_PROXY: "{{ python_https_proxy | default('') }}"
  when:
    - _virtualenv_path is defined
    - virtualenv_pip_upgrade is defined and virtualenv_pip_upgrade | bool

- name: Get list of all installed pip packages
  community.general.pip_package_info:
    clients: "{{ pip_clients }}"
  register: pip_packages
